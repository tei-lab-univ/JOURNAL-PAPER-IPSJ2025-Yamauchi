Compiled: VISITOR
Compiled: HALL
Compiled: ROOM_A
Compiled: DOOR_LOCK_HALL
Compiled: DOOR_LOCK_A
Formula !P_VISITOR_RULE_HALL = (true U (HALL_LOCKED & allow_Hall))
GBA 2 states 3 transitions
Buchi automata:
P_VISITOR_RULE_HALL = S0,
S1@ =(true -> S1),
S0 =(true -> S0 |HALL_LOCKED&allow_Hall -> S1).
Composition:P_VISITOR_RULE_HALL = HALL_LOCKED || allow_Hall || SYNC || P_VISITOR_RULE_HALL
State Space: 2 * 2 * 2 * 2 = 2 ** 4
Composing...
-- States: 16 Transitions: 41 Memory used: 28136KB
Composed in 45ms
After Tau elimination = 8 state
Tau reduction ON
P_VISITOR_RULE_HALL minimising...
Minimised States: 3 in 0ms
make DFA(P_VISITOR_RULE_HALL)
DFA(P_VISITOR_RULE_HALL) has 2 states.
Tau reduction ON
P_VISITOR_RULE_HALL minimising...
Minimised States: 2 in 0ms
Formula !P_LOCK_RULE_HALL1 = (true U ((!HALL_LOCKED & arrive_Hall[2]) & X (!lock_Hall U (resRoomStatus & !lock_Hall))))
GBA 3 states 5 transitions
Buchi automata:
P_LOCK_RULE_HALL1 = S0,
S1@ =(true -> S1),
S0 =(!HALL_LOCKED&arrive_Hall[2] -> S2 |true -> S0),
S2 =(!lock_Hall -> S2 |resRoomStatus&!lock_Hall -> S1).
Composition:P_LOCK_RULE_HALL1 = HALL_LOCKED || arrive_Hall[2] || resRoomStatus || lock_Hall || SYNC || P_LOCK_RULE_HALL1
State Space: 2 * 2 * 2 * 2 * 2 * 4 = 2 ** 7
Composing...
-- States: 43 Transitions: 120 Memory used: 26183KB
Composed in 36ms
After Tau elimination = 21 state
Tau reduction ON
P_LOCK_RULE_HALL1 minimising....
Minimised States: 5 in 0ms
make DFA(P_LOCK_RULE_HALL1)
DFA(P_LOCK_RULE_HALL1) has 6 states.
Tau reduction ON
P_LOCK_RULE_HALL1 minimising....
Minimised States: 3 in 0ms
Formula !P_LOCK_RULE_HALL2 = (true U ((HALL_TH_LOCKED1 & HALL_TH_LOCKED2) & unLock_Hall))
GBA 2 states 3 transitions
Buchi automata:
P_LOCK_RULE_HALL2 = S0,
S1@ =(true -> S1),
S0 =(true -> S0 |HALL_TH_LOCKED1&HALL_TH_LOCKED2&unLock_Hall -> S1).
Composition:P_LOCK_RULE_HALL2 = HALL_TH_LOCKED1 || HALL_TH_LOCKED2 || unLock_Hall || SYNC || P_LOCK_RULE_HALL2
State Space: 2 * 2 * 2 * 2 * 2 = 2 ** 5
Composing...
-- States: 32 Transitions: 97 Memory used: 26333KB
Composed in 28ms
After Tau elimination = 16 state
Tau reduction ON
P_LOCK_RULE_HALL2 minimising....
Minimised States: 5 in 0ms
make DFA(P_LOCK_RULE_HALL2)
DFA(P_LOCK_RULE_HALL2) has 4 states.
Tau reduction ON
P_LOCK_RULE_HALL2 minimising....
Minimised States: 4 in 0ms
Formula !P_UNLOCK_RULE_HALL1 = (true U ((HALL_LOCKED & allow_A) & X (!unLock_Hall U (resRoomStatus & !unLock_Hall))))
GBA 3 states 5 transitions
Buchi automata:
P_UNLOCK_RULE_HALL1 = S0,
S1@ =(true -> S1),
S0 =(true -> S0 |HALL_LOCKED&allow_A -> S2),
S2 =(!unLock_Hall -> S2 |resRoomStatus&!unLock_Hall -> S1).
Composition:P_UNLOCK_RULE_HALL1 = HALL_LOCKED || allow_A || resRoomStatus || unLock_Hall || SYNC || P_UNLOCK_RULE_HALL1
State Space: 2 * 2 * 2 * 2 * 2 * 4 = 2 ** 7
Composing...
-- States: 44 Transitions: 124 Memory used: 26333KB
Composed in 29ms
After Tau elimination = 22 state
Tau reduction ON
P_UNLOCK_RULE_HALL1 minimising.....
Minimised States: 5 in 0ms
make DFA(P_UNLOCK_RULE_HALL1)
DFA(P_UNLOCK_RULE_HALL1) has 6 states.
Tau reduction ON
P_UNLOCK_RULE_HALL1 minimising....
Minimised States: 3 in 0ms
Formula !P_HALL_LOCK_TIMING = (true U (!HALL_LOCK_TIME & lock_Hall))
GBA 2 states 3 transitions
Buchi automata:
P_HALL_LOCK_TIMING = S0,
S1@ =(true -> S1),
S0 =(!HALL_LOCK_TIME&lock_Hall -> S1 |true -> S0).
Composition:P_HALL_LOCK_TIMING = HALL_LOCK_TIME || lock_Hall || SYNC || P_HALL_LOCK_TIMING
State Space: 2 * 2 * 2 * 2 = 2 ** 4
Composing...
-- States: 16 Transitions: 41 Memory used: 26171KB
Composed in 30ms
After Tau elimination = 8 state
Tau reduction ON
P_HALL_LOCK_TIMING minimising...
Minimised States: 3 in 0ms
make DFA(P_HALL_LOCK_TIMING)
DFA(P_HALL_LOCK_TIMING) has 2 states.
Tau reduction ON
P_HALL_LOCK_TIMING minimising...
Minimised States: 2 in 0ms
Formula !P_HALL_UNLOCK_TIMING = (true U (!UNLOCK_TIME & unLock_Hall))
GBA 2 states 3 transitions
Buchi automata:
P_HALL_UNLOCK_TIMING = S0,
S1@ =(true -> S1),
S0 =(!UNLOCK_TIME&unLock_Hall -> S1 |true -> S0).
Composition:P_HALL_UNLOCK_TIMING = UNLOCK_TIME || unLock_Hall || SYNC || P_HALL_UNLOCK_TIMING
State Space: 2 * 2 * 2 * 2 = 2 ** 4
Composing...
-- States: 16 Transitions: 113 Memory used: 26160KB
Composed in 41ms
After Tau elimination = 8 state
Tau reduction ON
P_HALL_UNLOCK_TIMING minimising...
Minimised States: 3 in 0ms
make DFA(P_HALL_UNLOCK_TIMING)
DFA(P_HALL_UNLOCK_TIMING) has 2 states.
Tau reduction ON
P_HALL_UNLOCK_TIMING minimising...
Minimised States: 2 in 0ms
Formula !P_VISITOR_RULE_A = (true U (A_LOCKED & allow_A))
GBA 2 states 3 transitions
Buchi automata:
P_VISITOR_RULE_A = S0,
S1@ =(true -> S1),
S0 =(true -> S0 |A_LOCKED&allow_A -> S1).
Composition:P_VISITOR_RULE_A = A_LOCKED || allow_A || SYNC || P_VISITOR_RULE_A
State Space: 2 * 2 * 2 * 2 = 2 ** 4
Composing...
-- States: 16 Transitions: 41 Memory used: 26065KB
Composed in 43ms
After Tau elimination = 8 state
Tau reduction ON
P_VISITOR_RULE_A minimising...
Minimised States: 3 in 0ms
make DFA(P_VISITOR_RULE_A)
DFA(P_VISITOR_RULE_A) has 2 states.
Tau reduction ON
P_VISITOR_RULE_A minimising...
Minimised States: 2 in 0ms
Formula !P_LOCK_RULE_A1 = (true U ((!A_LOCKED & arrive_A[2]) & X (!lock_A U (resRoomStatus & !lock_A))))
GBA 3 states 5 transitions
Buchi automata:
P_LOCK_RULE_A1 = S0,
S1@ =(true -> S1),
S0 =(!A_LOCKED&arrive_A[2] -> S2 |true -> S0),
S2 =(!lock_A -> S2 |resRoomStatus&!lock_A -> S1).
Composition:P_LOCK_RULE_A1 = A_LOCKED || arrive_A[2] || resRoomStatus || lock_A || SYNC || P_LOCK_RULE_A1
State Space: 2 * 2 * 2 * 2 * 2 * 4 = 2 ** 7
Composing...
-- States: 43 Transitions: 120 Memory used: 26207KB
Composed in 39ms
After Tau elimination = 21 state
Tau reduction ON
P_LOCK_RULE_A1 minimising....
Minimised States: 5 in 0ms
make DFA(P_LOCK_RULE_A1)
DFA(P_LOCK_RULE_A1) has 6 states.
Tau reduction ON
P_LOCK_RULE_A1 minimising....
Minimised States: 3 in 1ms
Formula !P_LOCK_RULE_A2 = (true U ((A_TH_LOCKED1 & A_TH_LOCKED2) & unLock_A))
GBA 2 states 3 transitions
Buchi automata:
P_LOCK_RULE_A2 = S0,
S1@ =(true -> S1),
S0 =(true -> S0 |A_TH_LOCKED1&A_TH_LOCKED2&unLock_A -> S1).
Composition:P_LOCK_RULE_A2 = A_TH_LOCKED1 || A_TH_LOCKED2 || unLock_A || SYNC || P_LOCK_RULE_A2
State Space: 2 * 2 * 2 * 2 * 2 = 2 ** 5
Composing...
-- States: 32 Transitions: 97 Memory used: 26187KB
Composed in 31ms
After Tau elimination = 16 state
Tau reduction ON
P_LOCK_RULE_A2 minimising....
Minimised States: 5 in 0ms
make DFA(P_LOCK_RULE_A2)
DFA(P_LOCK_RULE_A2) has 4 states.
Tau reduction ON
P_LOCK_RULE_A2 minimising....
Minimised States: 4 in 0ms
Formula !P_UNLOCK_RULE_A1 = (true U ((A_LOCKED & allow_Out) & X (!unLock_A U (resRoomStatus & !unLock_A))))
GBA 3 states 5 transitions
Buchi automata:
P_UNLOCK_RULE_A1 = S0,
S1@ =(true -> S1),
S0 =(true -> S0 |A_LOCKED&allow_Out -> S2),
S2 =(!unLock_A -> S2 |resRoomStatus&!unLock_A -> S1).
Composition:P_UNLOCK_RULE_A1 = A_LOCKED || allow_Out || resRoomStatus || unLock_A || SYNC || P_UNLOCK_RULE_A1
State Space: 2 * 2 * 2 * 2 * 2 * 4 = 2 ** 7
Composing...
-- States: 44 Transitions: 124 Memory used: 26259KB
Composed in 31ms
After Tau elimination = 22 state
Tau reduction ON
P_UNLOCK_RULE_A1 minimising.....
Minimised States: 5 in 0ms
make DFA(P_UNLOCK_RULE_A1)
DFA(P_UNLOCK_RULE_A1) has 6 states.
Tau reduction ON
P_UNLOCK_RULE_A1 minimising....
Minimised States: 3 in 0ms
Formula !P_A_LOCK_TIMING = (true U (!A_LOCK_TIME & lock_A))
GBA 2 states 3 transitions
Buchi automata:
P_A_LOCK_TIMING = S0,
S1@ =(true -> S1),
S0 =(!A_LOCK_TIME&lock_A -> S1 |true -> S0).
Composition:P_A_LOCK_TIMING = A_LOCK_TIME || lock_A || SYNC || P_A_LOCK_TIMING
State Space: 2 * 2 * 2 * 2 = 2 ** 4
Composing...
-- States: 16 Transitions: 41 Memory used: 26416KB
Composed in 34ms
After Tau elimination = 8 state
Tau reduction ON
P_A_LOCK_TIMING minimising...
Minimised States: 3 in 0ms
make DFA(P_A_LOCK_TIMING)
DFA(P_A_LOCK_TIMING) has 2 states.
Tau reduction ON
P_A_LOCK_TIMING minimising...
Minimised States: 2 in 0ms
Formula !P_A_UNLOCK_TIMING = (true U (!UNLOCK_TIME & unLock_A))
GBA 2 states 3 transitions
Buchi automata:
P_A_UNLOCK_TIMING = S0,
S1@ =(true -> S1),
S0 =(!UNLOCK_TIME&unLock_A -> S1 |true -> S0).
Composition:P_A_UNLOCK_TIMING = UNLOCK_TIME || unLock_A || SYNC || P_A_UNLOCK_TIMING
State Space: 2 * 2 * 2 * 2 = 2 ** 4
Composing...
-- States: 16 Transitions: 113 Memory used: 26245KB
Composed in 34ms
After Tau elimination = 8 state
Tau reduction ON
P_A_UNLOCK_TIMING minimising...
Minimised States: 3 in 0ms
make DFA(P_A_UNLOCK_TIMING)
DFA(P_A_UNLOCK_TIMING) has 2 states.
Tau reduction ON
P_A_UNLOCK_TIMING minimising...
Minimised States: 2 in 0ms
Compile is Complete!


===================================================
           Stepwise Controller Synthesis           
===================================================

[info] Monitor Models
     * P_HALL_LOCK_TIMING : [lock_Hall, arrive_Hall.2, resRoomStatus]
     * P_LOCK_RULE_A1 : [unLock_A, arrive_A.2, resRoomStatus, lock_A]
     * P_LOCK_RULE_HALL1 : [unLock_Hall, lock_Hall, arrive_Hall.2, resRoomStatus]
     * P_VISITOR_RULE_HALL : [unLock_Hall, lock_Hall, allow_Hall]
     * P_HALL_UNLOCK_TIMING : [notEnter, arrive_A.1, arrive_A.2, arrive_A.3, arrive_A.4, unLock_Hall, arrive_Hall.1, arrive_Hall.2, arrive_Hall.3, leave, resRoomStatus, arrive_Hall.4]
     * P_UNLOCK_RULE_A1 : [unLock_A, resRoomStatus, allow_Out, lock_A]
     * P_LOCK_RULE_A2 : [unLock_A, arrive_A.2, allow_Out, lock_A]
     * P_A_LOCK_TIMING : [arrive_A.2, resRoomStatus, lock_A]
     * P_LOCK_RULE_HALL2 : [lock_Hall, unLock_Hall, allow_A, arrive_Hall.2]
     * P_VISITOR_RULE_A : [unLock_A, allow_A, lock_A]
     * P_A_UNLOCK_TIMING : [notEnter, arrive_A.1, arrive_A.2, arrive_A.3, arrive_A.4, arrive_Hall.1, unLock_A, arrive_Hall.2, arrive_Hall.3, leave, resRoomStatus, arrive_Hall.4]
     * P_UNLOCK_RULE_HALL1 : [unLock_Hall, lock_Hall, allow_A, resRoomStatus]

[info] Environment Models
     * VISITOR : [notEnter, arrive_A.1, allow_A, arrive_A.2, reqEnter_Hall, arrive_A.3, arrive_A.4, deny_A, allow_Out, deny_Out, reqEnter_A, arrive_Hall.1, arrive_Hall.2, arrive_Hall.3, leave, resRoomStatus, arrive_Hall.4, deny_Hall, reqOut, allow_Hall]
     * HALL : [reqEnter_A, arrive_Hall.1, arrive_Hall.2, arrive_Hall.3, arrive_Hall.4, deny_A, allow_Hall]
     * ROOM_A : [arrive_A.1, allow_A, arrive_A.2, arrive_A.3, arrive_A.4, reqOut, deny_Out]
     * DOOR_LOCK_HALL : [lock_Hall, unLock_Hall]
     * DOOR_LOCK_A : [unLock_A, lock_A]


---------------------------------------------------
                     STEP 1
---------------------------------------------------
[info] Monitor Models
     * P_HALL_LOCK_TIMING : [VISITOR, HALL, DOOR_LOCK_HALL]
     * P_LOCK_RULE_A1 : [VISITOR, ROOM_A, DOOR_LOCK_A]
     * P_LOCK_RULE_HALL1 : [VISITOR, HALL, DOOR_LOCK_HALL]
     * P_VISITOR_RULE_HALL : [VISITOR, HALL, DOOR_LOCK_HALL]
     * P_HALL_UNLOCK_TIMING : [VISITOR, HALL, ROOM_A, DOOR_LOCK_HALL]
     * P_UNLOCK_RULE_A1 : [VISITOR, DOOR_LOCK_A]
     * P_LOCK_RULE_A2 : [VISITOR, ROOM_A, DOOR_LOCK_A]
     * P_A_LOCK_TIMING : [VISITOR, ROOM_A, DOOR_LOCK_A]
     * P_LOCK_RULE_HALL2 : [VISITOR, HALL, ROOM_A, DOOR_LOCK_HALL]
     * P_VISITOR_RULE_A : [VISITOR, ROOM_A, DOOR_LOCK_A]
     * P_A_UNLOCK_TIMING : [VISITOR, HALL, ROOM_A, DOOR_LOCK_A]
     * P_UNLOCK_RULE_HALL1 : [VISITOR, ROOM_A, DOOR_LOCK_HALL]

[info] Environment Models
     * VISITOR : []
     * HALL : []
     * ROOM_A : []
     * DOOR_LOCK_HALL : []
     * DOOR_LOCK_A : []

[info] Synthetic Cost (number of monitored models)
     * P_HALL_LOCK_TIMING : 3
     * P_LOCK_RULE_A1 : 3
     * P_LOCK_RULE_HALL1 : 3
     * P_VISITOR_RULE_HALL : 3
     * P_HALL_UNLOCK_TIMING : 4
     * P_UNLOCK_RULE_A1 : 2
     * P_LOCK_RULE_A2 : 3
     * P_A_LOCK_TIMING : 3
     * P_LOCK_RULE_HALL2 : 4
     * P_VISITOR_RULE_A : 3
     * P_A_UNLOCK_TIMING : 4
     * P_UNLOCK_RULE_HALL1 : 3

Composition:PartController_1 = VISITOR || DOOR_LOCK_A || P_UNLOCK_RULE_A1 || P_UNLOCK_RULE_A1
State Space: 13 * 2 * 3 * 3 = 2 ** 9
Composing...
-- States: 31 Transitions: 98 Memory used: 26359KB
Composed in 38ms
Solving the LTS control problem.
Environment states: 32
Game states: 32
Analysis time: 103ms.
Controller [31] generated successfully.
Composition:PartController_1 = PartController_1 || P_UNLOCK_RULE_A1 || P_UNLOCK_RULE_A1
State Space: 31 * 3 * 3 = 2 ** 9
Composing...
-- States: 31 Transitions: 95 Memory used: 27709KB
Composed in 35ms

[info] STEP1 Infomation
[info] Output Model     : PartController_1
[info] Input Models     : [VISITOR, DOOR_LOCK_A, P_UNLOCK_RULE_A1, P_UNLOCK_RULE_A1]
[info] Component Models : [VISITOR, DOOR_LOCK_A]
[info] Execution Time
     * policy only      : 0 ms
     * synthesis only   : 177 ms
     * total            : 177 ms


---------------------------------------------------
                     STEP 2
---------------------------------------------------
[info] Monitor Models
     * P_HALL_LOCK_TIMING : [HALL, DOOR_LOCK_HALL, VISITOR, DOOR_LOCK_A]
     * P_LOCK_RULE_A1 : [ROOM_A, VISITOR, DOOR_LOCK_A]
     * P_LOCK_RULE_HALL1 : [HALL, DOOR_LOCK_HALL, VISITOR, DOOR_LOCK_A]
     * P_VISITOR_RULE_HALL : [HALL, DOOR_LOCK_HALL, VISITOR, DOOR_LOCK_A]
     * P_HALL_UNLOCK_TIMING : [HALL, ROOM_A, DOOR_LOCK_HALL, VISITOR, DOOR_LOCK_A]
     * P_LOCK_RULE_A2 : [ROOM_A, VISITOR, DOOR_LOCK_A]
     * P_A_LOCK_TIMING : [ROOM_A, VISITOR, DOOR_LOCK_A]
     * P_LOCK_RULE_HALL2 : [HALL, ROOM_A, DOOR_LOCK_HALL, VISITOR, DOOR_LOCK_A]
     * P_VISITOR_RULE_A : [ROOM_A, VISITOR, DOOR_LOCK_A]
     * P_A_UNLOCK_TIMING : [HALL, ROOM_A, VISITOR, DOOR_LOCK_A]
     * P_UNLOCK_RULE_HALL1 : [ROOM_A, DOOR_LOCK_HALL, VISITOR, DOOR_LOCK_A]

[info] Environment Models
     * HALL : []
     * ROOM_A : []
     * DOOR_LOCK_HALL : []
     * PartController_1 : [VISITOR, DOOR_LOCK_A]

[info] Synthetic Cost (number of monitored models)
     * P_HALL_LOCK_TIMING : 4
     * P_LOCK_RULE_A1 : 3
     * P_LOCK_RULE_HALL1 : 4
     * P_VISITOR_RULE_HALL : 4
     * P_HALL_UNLOCK_TIMING : 5
     * P_LOCK_RULE_A2 : 3
     * P_A_LOCK_TIMING : 3
     * P_LOCK_RULE_HALL2 : 5
     * P_VISITOR_RULE_A : 3
     * P_A_UNLOCK_TIMING : 4
     * P_UNLOCK_RULE_HALL1 : 4

Composition:PartController_2 = ROOM_A || PartController_1 || P_LOCK_RULE_A1 || P_LOCK_RULE_A1 || P_LOCK_RULE_A2 || P_A_LOCK_TIMING || P_VISITOR_RULE_A
State Space: 13 * 31 * 3 * 3 * 4 * 2 * 2 = 2 ** 17
Composing...
-- States: 47 Transitions: 128 Memory used: 27743KB
Composed in 35ms
Solving the LTS control problem.
Environment states: 48
Game states: 48
Analysis time: 44ms.
Controller [47] generated successfully.
Composition:PartController_2 = PartController_2 || P_LOCK_RULE_A1 || P_LOCK_RULE_A1 || P_LOCK_RULE_A2 || P_A_LOCK_TIMING || P_VISITOR_RULE_A
State Space: 47 * 3 * 3 * 4 * 2 * 2 = 2 ** 14
Composing...
-- States: 47 Transitions: 86 Memory used: 28647KB
Composed in 36ms

[info] STEP2 Infomation
[info] Output Model     : PartController_2
[info] Input Models     : [ROOM_A, PartController_1, P_LOCK_RULE_A1, P_LOCK_RULE_A1, P_LOCK_RULE_A2, P_A_LOCK_TIMING, P_VISITOR_RULE_A]
[info] Component Models : [VISITOR, ROOM_A, DOOR_LOCK_A]
[info] Execution Time
     * policy only      : 0 ms
     * synthesis only   : 116 ms
     * total            : 116 ms


---------------------------------------------------
                     STEP 3
---------------------------------------------------
[info] Monitor Models
     * P_HALL_LOCK_TIMING : [HALL, DOOR_LOCK_HALL, VISITOR, ROOM_A, DOOR_LOCK_A]
     * P_LOCK_RULE_HALL1 : [HALL, DOOR_LOCK_HALL, VISITOR, ROOM_A, DOOR_LOCK_A]
     * P_VISITOR_RULE_HALL : [HALL, DOOR_LOCK_HALL, VISITOR, ROOM_A, DOOR_LOCK_A]
     * P_HALL_UNLOCK_TIMING : [HALL, DOOR_LOCK_HALL, VISITOR, ROOM_A, DOOR_LOCK_A]
     * P_LOCK_RULE_HALL2 : [HALL, DOOR_LOCK_HALL, VISITOR, ROOM_A, DOOR_LOCK_A]
     * P_A_UNLOCK_TIMING : [HALL, VISITOR, ROOM_A, DOOR_LOCK_A]
     * P_UNLOCK_RULE_HALL1 : [DOOR_LOCK_HALL, VISITOR, ROOM_A, DOOR_LOCK_A]

[info] Environment Models
     * HALL : []
     * DOOR_LOCK_HALL : []
     * PartController_2 : [VISITOR, ROOM_A, DOOR_LOCK_A]

[info] Synthetic Cost (number of monitored models)
     * P_HALL_LOCK_TIMING : 5
     * P_LOCK_RULE_HALL1 : 5
     * P_VISITOR_RULE_HALL : 5
     * P_HALL_UNLOCK_TIMING : 5
     * P_LOCK_RULE_HALL2 : 5
     * P_A_UNLOCK_TIMING : 4
     * P_UNLOCK_RULE_HALL1 : 4

Composition:PartController_3 = HALL || PartController_2 || P_A_UNLOCK_TIMING || P_A_UNLOCK_TIMING
State Space: 13 * 47 * 2 * 2 = 2 ** 12
Composing...
-- States: 211 Transitions: 302 Memory used: 28775KB
Composed in 32ms
Solving the LTS control problem.
Environment states: 212
Game states: 212
Analysis time: 61ms.
Controller [211] generated successfully.
Composition:PartController_3 = PartController_3 || P_A_UNLOCK_TIMING || P_A_UNLOCK_TIMING
State Space: 211 * 2 * 2 = 2 ** 10
Composing...
-- States: 211 Transitions: 297 Memory used: 30137KB
Composed in 37ms

[info] STEP3 Infomation
[info] Output Model     : PartController_3
[info] Input Models     : [HALL, PartController_2, P_A_UNLOCK_TIMING, P_A_UNLOCK_TIMING]
[info] Component Models : [VISITOR, ROOM_A, HALL, DOOR_LOCK_A]
[info] Execution Time
     * policy only      : 1 ms
     * synthesis only   : 132 ms
     * total            : 133 ms


---------------------------------------------------
                     STEP 4
---------------------------------------------------
[info] Monitor Models
     * P_HALL_LOCK_TIMING : [DOOR_LOCK_HALL, VISITOR, ROOM_A, HALL, DOOR_LOCK_A]
     * P_LOCK_RULE_HALL1 : [DOOR_LOCK_HALL, VISITOR, ROOM_A, HALL, DOOR_LOCK_A]
     * P_VISITOR_RULE_HALL : [DOOR_LOCK_HALL, VISITOR, ROOM_A, HALL, DOOR_LOCK_A]
     * P_HALL_UNLOCK_TIMING : [DOOR_LOCK_HALL, VISITOR, ROOM_A, HALL, DOOR_LOCK_A]
     * P_LOCK_RULE_HALL2 : [DOOR_LOCK_HALL, VISITOR, ROOM_A, HALL, DOOR_LOCK_A]
     * P_UNLOCK_RULE_HALL1 : [DOOR_LOCK_HALL, VISITOR, ROOM_A, HALL, DOOR_LOCK_A]

[info] Environment Models
     * DOOR_LOCK_HALL : []
     * PartController_3 : [VISITOR, ROOM_A, HALL, DOOR_LOCK_A]

[info] Synthetic Cost (number of monitored models)
     * P_HALL_LOCK_TIMING : 5
     * P_LOCK_RULE_HALL1 : 5
     * P_VISITOR_RULE_HALL : 5
     * P_HALL_UNLOCK_TIMING : 5
     * P_LOCK_RULE_HALL2 : 5
     * P_UNLOCK_RULE_HALL1 : 5

Composition:StepwiseController = DOOR_LOCK_HALL || PartController_3 || P_HALL_LOCK_TIMING || P_HALL_LOCK_TIMING || P_LOCK_RULE_HALL1 || P_VISITOR_RULE_HALL || P_HALL_UNLOCK_TIMING || P_LOCK_RULE_HALL2 || P_UNLOCK_RULE_HALL1
State Space: 2 * 211 * 2 * 2 * 3 * 2 * 2 * 4 * 3 = 2 ** 19
Composing...
-- States: 153 Transitions: 372 Memory used: 30139KB
Composed in 36ms
Solving the LTS control problem.
Environment states: 154
Game states: 154
Analysis time: 50ms.
Controller [153] generated successfully.
Composition:StepwiseController = StepwiseController || P_HALL_LOCK_TIMING || P_HALL_LOCK_TIMING || P_LOCK_RULE_HALL1 || P_VISITOR_RULE_HALL || P_HALL_UNLOCK_TIMING || P_LOCK_RULE_HALL2 || P_UNLOCK_RULE_HALL1
State Space: 153 * 2 * 2 * 3 * 2 * 2 * 4 * 3 = 2 ** 18
Composing...
-- States: 153 Transitions: 225 Memory used: 31025KB
Composed in 41ms

[info] STEP4 Infomation
[info] Output Model     : StepwiseController
[info] Input Models     : [DOOR_LOCK_HALL, PartController_3, P_HALL_LOCK_TIMING, P_HALL_LOCK_TIMING, P_LOCK_RULE_HALL1, P_VISITOR_RULE_HALL, P_HALL_UNLOCK_TIMING, P_LOCK_RULE_HALL2, P_UNLOCK_RULE_HALL1]
[info] Component Models : [VISITOR, ROOM_A, DOOR_LOCK_HALL, HALL, DOOR_LOCK_A]
[info] Execution Time
     * policy only      : 0 ms
     * synthesis only   : 127 ms
     * total            : 127 ms




[info] Stepwise Controller Synthesis is Complete!
[info] Max Space      : 211
[info] Max Transition : 372
[info] Max Memory     : 31081 MB
[info] Execution Time
     * policy only    : 1 ms
     * synthesis only : 552 ms
     * total          : 1057 ms


